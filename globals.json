{
    "account_info": {
        "aws_company_name": "fsu-cmpa",
        "aws_globals_path": "https://fsu-cmpa.s3.amazonaws.com/globals.json",
        "config_repo": "https://github.com/tmikota/master.git",
        "default_company": "",
        "project_management": "shotgun"
    },
    "asset_categories": {
        "Character": "char",
        "Environment": "env",
        "Prop": "prop",
        "Vehicle": "veh"
    },
    "asset_category_long_list": [
        "Prop",
        "Environment",
        "Vehicle",
        "Character"
    ],
    "colors": {
        "background": "#1E1F26",
        "highlight": "#4D648D",
        "secondary": "#283655",
        "text": "#D0E1F9"
    },
    "company_info": {
        "short_name": "pre"
    },
    "definitions": {
        "ingest_browser_header": [
            "Filename",
            "Filepath",
            "Filetype",
            "Frame_Range",
            "Tags",
            "Keep_Client_Naming",
            "Scope",
            "Seq",
            "Shot",
            "Task",
            "Publish_Filepath",
            "Publish_Date",
            "Status",
            "Parent"
        ]
    },
    "dvp": {
        "frame_rate": 24
    },
    "edit_categories": {
        "Character": "char",
        "Environment": "env",
        "Library": "lib",
        "Production": "prod",
        "Prop": "prop",
        "Vehicle": "veh"
    },
    "edit_category_long_list": [
        "Subject",
        "Scene",
        "B_Roll",
        "Tutorial",
        "Lecture",
        "Zoom"
    ],
    "email": {
        "bugs": "c5r2y1k1t5h5o4l9@fsu-cmpa.slack.com",
        "from": "reports@cglumberjack.com",
        "lj_domain": "https://api.mailgun.net/v3/cglumberjack.com/messages",
        "mailgun_key": "key-3714d0480ab5669b65dc08b8a59c49f7",
        "reviews": "tom@cglumberjack.com"
    },
    "ext_map": {
        ".ai": "image",
        ".ari": "image",
        ".avi": "movie",
        ".bmp": "image",
        ".dpx": "image",
        ".exr": "image",
        ".gif": "image",
        ".hdr": "image",
        ".ico": "image",
        ".jpeg": "image",
        ".jpg": "image",
        ".mlv": "movie",
        ".mov": "movie",
        ".mp4": "movie",
        ".mpg": "movie",
        ".pdf": "pdf",
        ".png": "image",
        ".pnm": "image",
        ".ppt": "ppt",
        ".pptx": "ppt",
        ".psd": "image",
        ".qt": "movie",
        ".tex": "image",
        ".tif": "image",
        ".tiff": "image",
        ".tx": "image",
        ".xbm": "image"
    },
    "helpdesk": {
        "help_menu": ""
    },
    "layout": {
        "asset": {
            "name": "",
            "source_path": "",
            "task": "",
            "transform": "",
            "type": "asset"
        },
        "camera": {
            "frame_end": 0,
            "frame_start": 0,
            "name": "",
            "source_path": "",
            "task": "",
            "transform": "",
            "type": "camera"
        }
    },
    "logging": {
        "debug": {
            "format": "%(asctime)-15s  %(levelname)s %(message)s \"%(pathname)s:%(lineno)d\""
        },
        "format": "%(asctime)-15s  %(levelname)s %(message)s \"%(pathname)s:%(lineno)d\"",
        "level": "info"
    },
    "padding_map": {
        "2": "%02d",
        "3": "%03d",
        "4": "%04d",
        "5": "%05d",
        "6": "%06d",
        "7": "%07d",
        "8": "%08d",
        "9": "%09d"
    },
    "perforce": {
        "depots": {
            "KYULDEPOT": "4.26.2",
            "TomDepot": "4.26.2",
            "depot": "4.26.2"
        },
        "drive": "C:",
        "port": 1666,
        "server": {
            "computer": "CMPA-W-VP-W01",
            "ip": "10.0.0.101",
            "user": "vp01"
        },
        "workstations": {
            "CMPA-W-VP-W01": {
                "computer": "CMPA-W-VP-W01",
                "ip": "10.0.0.101",
                "user": "vp01"
            }
        }
    },
    "project_info": {
        "advent": {
            "short_name": "adv"
        },
        "alchemytestb": {
            "short_name": "alc"
        }
    },
    "project_management": {
        "shotgun": {
            "api": {
                "api_key": "o(sryqcdvxsaxadlvUbgr3mdk",
                "api_script": "alchemy2",
                "api_user": "tmikota",
                "concurrent": 4,
                "concurrent_low": 0,
                "default_schema": "default",
                "notes": "ensure short codes exist for all pipeline steps in shotgun, might want a wizard for this.",
                "project_short_name": "sg_code",
                "server_url": "https://premise-entertainme.shotgrid.autodesk.com"
            },
            "tasks": {
                "default": {
                    "long_to_short": {
                        "assets": {
                            "Bundle": "BDL",
                            "Model": "MDL",
                            "Rig": "RIG",
                            "Shading": "SHD",
                            "Texture": "TXT"
                        },
                        "shots": {
                            "Animatic": "AMC",
                            "Animation": "ANM",
                            "Comp": "CMP",
                            "Layout": "LAY",
                            "Light": "LGT",
                            "StoryBoard": "SRB"
                        }
                    },
                    "short_to_long": {
                        "assets": {
                            "BDL": "Bundle",
                            "MDL": "Model",
                            "RIG": "Rig",
                            "SHD": "Shading",
                            "TXT": "Texture"
                        },
                        "shots": {
                            "AMC": "Animatic",
                            "ANM": "Animation",
                            "CMP": "Comp",
                            "LAY": "Layout",
                            "LGT": "Light",
                            "SRB": "StoryBoard"
                        }
                    }
                }
            },
            "users": {
                "v02": {
                    "first": "Tom",
                    "last": "Mikota",
                    "login": "tom@cglumberjack.com"
                }
            }
        }
    },
    "rules": {
        "context_list": [
            "render",
            "source",
            "unreal"
        ],
        "general": {
            "file_sequence": {
                "regex": "\\.[0-9]+\\."
            },
            "model_geo": {
                "example": "Example Geo Names: wood, wood2, wood22, wood222, wood2222, wood22222",
                "regex": "^[a-zA-Z]{3,}[0-9]{0,5}$"
            },
            "model_material": {
                "example": "Example Mat names: wood_mtl",
                "regex": "^[a-zA-Z]{3,}[A-Z]?_mtl$"
            },
            "shot_cam": {
                "example": "Example Shot Cam: cam010_0200",
                "regex": "^cam[0-9]{3}_[0-9]{4}$"
            },
            "taskname": {
                "example": "eg: animation, anim",
                "regex": "[a-z]{3,9}$"
            },
            "texture_channel": {
                "example": "Example Texture Channel: diffuse",
                "regex": "^[A-Za-z]+$"
            },
            "valid_chars": {
                "regex": "[^a-zA-Z0-9._#]"
            },
            "valid_sequence": {
                "regex": "[aA-zZ]+(\\.|\\_|\\-)[0-9]{2,4}\\."
            }
        },
        "ignore": {
            "contains": [
                "cgl_info.json",
                "_config",
                "publish_data.csv",
                ".preview",
                ".thumb"
            ],
            "endswith": [],
            "matches": []
        },
        "path_variables": {
            "aov": {
                "regex": "[A-Za-z0-9]+"
            },
            "asset": {
                "example": "examples:\n\tkingkong - [creates single asset 'kingkong', in 'default', category]\n\tkingkong, trex [creates 2 assets in 'default', category]\n\tProp:kingkong [creates kingkong in 'Prop', category]\n\tProp:kingkong, trex [creates multiple assets in 'Prop' category]",
                "regex": "[a-zA-Z]{3,}$"
            },
            "assetname": {
                "example": "",
                "regex": "[a-zA-Z_]+$"
            },
            "branch": {
                "regex": "[a-z]+"
            },
            "camera": {
                "regex": "[A-Za-z0-9_]+"
            },
            "company": {
                "example": "Company name rules:\n    Underscores are ok ('_')\n    Letters of the alphabet (a-z, A-Z)\n    Must Contain 3 or more characters",
                "regex": "[A-Za-z_]{3,}$"
            },
            "company_sn": {
                "example": "Company short name rules:\n    Letters of the alphabet (a-z, A-Z)\n    Must Contain 3 characters",
                "regex": "[A-Za-z_]{3}$"
            },
            "context": {
                "example": "examples: source, render",
                "regex": "[a-z]+"
            },
            "date": {
                "regex": "[0-9_]+"
            },
            "ext": {
                "regex": "[a-z]{2,9}"
            },
            "file_type": {
                "regex": "^[a-z]+"
            },
            "filename": {
                "regex": "\\w+"
            },
            "filename_base": {
                "regex": "\\w+"
            },
            "frame": {
                "regex": "[0-9]{4}"
            },
            "frame_padding": {
                "regex": "\\.####"
            },
            "hd_proxy_path": {
                "regex": "^[a-zA-Z_.0-9]+"
            },
            "ingest_source": {
                "regex": "[A-Za-z0-9_]+"
            },
            "major_version": {
                "regex": "[0-9]{3}"
            },
            "minor_version": {
                "regex": "[0-9]{3}"
            },
            "name": {
                "regex": "[a-z]+"
            },
            "preview_path": {
                "regex": "^[a-zA-Z_.0-9]+"
            },
            "project": {
                "example": "Project name rules:\n    Underscores are ok ('_',)\n    Letters of the alphabet (a-z, A-Z)\n    Must Contain 3 or more characters",
                "regex": "[A-Za-z_]{3,10}$"
            },
            "project_sn": {
                "example": "Project short name rules:\n    Letters of the alphabet (a-z, A-Z)\n    Must Contain 3 characters",
                "regex": "[A-Za-z_]{3}$"
            },
            "render_pass": {
                "regex": "[A-Za-z0-9]+"
            },
            "resolution": {
                "regex": "[A-Za-z0-9]+"
            },
            "root": {
                "regex": "[A-Za-z0-9_\\:]+"
            },
            "scope": {
                "example": "examples: assets, shots, sets",
                "regex": "[a-z]+"
            },
            "seq": {
                "example": "examples: 000, 010, 020",
                "length": 3,
                "regex": "^[0-9]{3}$|^[A-Z]{3}$"
            },
            "shot": {
                "length": 3,
                "regex": "^[0-9]{3,4}$"
            },
            "shotname": {
                "example": "eg: 050_0100, THC_0500 (SEQ_SHOT)",
                "regex": "[A-Z0-9]{3}\\_[0-9]{4}$"
            },
            "task": {
                "regex": "[a-z]+"
            },
            "thumb_path": {
                "regex": "^[a-zA-Z_.0-9]+"
            },
            "type": {
                "regex": "[a-zA-Z]+"
            },
            "user": {
                "regex": "[a-z]+"
            },
            "user_email": {
                "regex": "[A-Za-z0-9]+"
            },
            "variant": {
                "regex": "[a-z]+"
            },
            "version": {
                "regex": "[0-9]{3,5}"
            }
        },
        "scope_list": [
            "assets",
            "shots",
            "IO",
            "sets"
        ]
    },
    "sync": {
        "syncthing": {
            "aws_bucket_url": "https://fsu-cmpa.s3.amazonaws.com/sync_thing",
            "sheets_config_path": "Z:\\Projects\\VFX\\COMPANIES\\_config\\client.json",
            "sheets_name": "FSU_CMPA_SYNC_THING",
            "sync_thing_url": "https://fsu-cmpa.s3.amazonaws.com/sync_thing/client.json"
        }
    },
    "templates": {
        "IO": {
            "render": {
                "path": "{company}/render/{project}/{branch}/IO/{ingest_source}",
                "version": "{version}"
            },
            "source": {
                "path": "{company}/source/{project}/{branch}/IO/{ingest_source}",
                "version": "{version}"
            }
        },
        "assets": {
            "render": {
                "file": "/{filename}.{ext}",
                "path": "{company}/render/{project}/{branch}/assets/{type}/{asset}/{task}/{variant}/{user}",
                "version": "{version}/{resolution}/{filename}.{ext}"
            },
            "source": {
                "path": "{company}/source/{project}/{branch}/assets/{type}/{asset}/{task}/{variant}/{user}",
                "version": "{version}/{resolution}/{filename}.{ext}"
            }
        },
        "path_template": [
            "company",
            "context",
            "project",
            "branch",
            "scope"
        ],
        "sets": {
            "render": {
                "file": "/{filename}.{ext}",
                "path": "{company}/render/{project}/{branch}/sets/{type}/{asset}/{task}/{variant}/{user}",
                "version": "{version}/{resolution}/{filename}.{ext}"
            },
            "source": {
                "path": "{company}/source/{project}/{branch}/sets/{type}/{asset}/{task}/{variant}/{user}",
                "version": "{version}/{resolution}/{filename}.{ext}"
            }
        },
        "shots": {
            "render": {
                "path": "{company}/render/{project}/{branch}/shots/{seq}/{shot}/{task}/{variant}/{user}",
                "version": "{version}/{resolution}/{filename}.{ext}",
                "version_lite": "{version}/{resolution}/{render_pass}/{camera}/{aov}/{filename}.{ext}"
            },
            "source": {
                "path": "{company}/source/{project}/{branch}/shots/{seq}/{shot}/{task}/{variant}/{user}",
                "version": "{version}/{resolution}/{filename}.{ext}"
            }
        },
        "unreal": {
            "assets": {
                "file": "{filename}.{ext}",
                "path": "content/assets/{type}/{asset}/{task}/{variant}"
            },
            "multiuser": {
                "port": 7000
            },
            "plugins": [
                "Water",
                "CodeView",
                "NiagaraExtras",
                "RigLogic",
                "LiveLink",
                "LiveLinkControlRig",
                "HairStrands"
            ],
            "project": {
                "path": "{company}/unreal/{unreal_project}/{filename}.{ext}"
            },
            "shots": {
                "file": "{filename}.{ext}",
                "path": "content/shots/{seq}/{shot}/{task}/{variant}"
            }
        }
    }
}